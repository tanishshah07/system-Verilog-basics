
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>////////////////////////////////////////////////</q-m>
<a name="2"><q-n>     2  </q-n></a><q-m>//</q-m>
<a name="3"><q-n>     3  </q-n></a><q-m>//Company_Name : Scaledge</q-m>
<a name="4"><q-n>     4  </q-n></a><q-m>//Author_Name  : TANISH_SHAH</q-m>
<a name="5"><q-n>     5  </q-n></a><q-m>//File_Name    : mem_gen.sv</q-m>
<a name="6"><q-n>     6  </q-n></a><q-m>//File_Path    : </q-m>
<a name="7"><q-n>     7  </q-n></a><q-m>//Class_Name   : mem_gen               </q-m>
<a name="8"><q-n>     8  </q-n></a><q-m>//Project_Name : Dual_Port_Ram</q-m>
<a name="9"><q-n>     9  </q-n></a><q-m>//Description  :</q-m>
<a name="10"><q-n>     10  </q-n></a><q-m>//</q-m>
<a name="11"><q-n>     11  </q-n></a><q-m>/////////////////////////////////////////////////</q-m>
<a name="12"><q-n>     12  </q-n></a>`ifndef GEN_SV
<a name="13"><q-n>     13  </q-n></a>`<q-a>define</q-w> GEN_SV
<a name="14"><q-n>     14  </q-n></a>
<a name="15"><q-n>     15  </q-n></a><q-m>//typedef mem_test;</q-m>
<a name="16"><q-n>     16  </q-n></a><q-w>class</q-w> mem_gen;
<a name="17"><q-n>     17  </q-n></a>mem_transx trans;
<a name="18"><q-n>     18  </q-n></a>
<a name="19"><q-n>     19  </q-n></a><q-m>//mem_test tr;</q-m>
<a name="20"><q-n>     20  </q-n></a>
<a name="21"><q-n>     21  </q-n></a><q-m>//int count=0;</q-m>
<a name="22"><q-n>     22  </q-n></a><q-m>//bit [`ADDR_WID-1:0] que[$];</q-m>
<a name="23"><q-n>     23  </q-n></a><q-w>local</q-w> mailbox #(mem_transx) gen2drv;
<a name="24"><q-n>     24  </q-n></a><q-m>//virtual mem_intf vif;</q-m>
<a name="25"><q-n>     25  </q-n></a>
<a name="26"><q-n>     26  </q-n></a><q-m>//for reset by event</q-m>
<a name="27"><q-n>     27  </q-n></a>
<a name="28"><q-n>     28  </q-n></a><q-w>function</q-w> <q-w>void</q-w> connect(mailbox #(mem_transx) gen2drv);
<a name="29"><q-n>     29  </q-n></a> <q-w>this</q-w>.gen2drv=gen2drv;
<a name="30"><q-n>     30  </q-n></a><q-w>endfunction</q-w>
<a name="31"><q-n>     31  </q-n></a>
<a name="32"><q-n>     32  </q-n></a><q-m>/*</q-m>
<a name="33"><q-n>     33  </q-n></a><q-m>function void connect(mailbox #(mem_transx) gen2drv,virtual mem_intf vif);</q-m>
<a name="34"><q-n>     34  </q-n></a><q-m> this.vif=vif;</q-m>
<a name="35"><q-n>     35  </q-n></a><q-m> this.gen2drv=gen2drv;</q-m>
<a name="36"><q-n>     36  </q-n></a><q-m>endfunction</q-m>
<a name="37"><q-n>     37  </q-n></a><q-m>*/</q-m>
<a name="38"><q-n>     38  </q-n></a>
<a name="39"><q-n>     39  </q-n></a><q-w>virtual</q-w> <q-w>task</q-w> run_phase();
<a name="40"><q-n>     40  </q-n></a><q-m>// $display("perfect skeleton till top side of generatiro");</q-m>
<a name="41"><q-n>     41  </q-n></a>  <q-m>//repeat(6) begin</q-m>
<a name="42"><q-n>     42  </q-n></a>   <q-m>//trans=new();</q-m>
<a name="43"><q-n>     43  </q-n></a>  <q-m>//  if(!trans.randomize()) $error("randomization is failed");</q-m>
<a name="44"><q-n>     44  </q-n></a>    <q-m>/*</q-m>
<a name="45"><q-n>     45  </q-n></a><q-m>	//-----------------------------------------------------------------</q-m>
<a name="46"><q-n>     46  </q-n></a><q-m>	// 3 write and 3 read;</q-m>
<a name="47"><q-n>     47  </q-n></a><q-m>	   if(count&lt;3) begin </q-m>
<a name="48"><q-n>     48  </q-n></a><q-m>		   trans.randomize() with {trans.fnx_e==1;};</q-m>
<a name="49"><q-n>     49  </q-n></a><q-m>		   que.push_back(trans.wr_addr);</q-m>
<a name="50"><q-n>     50  </q-n></a><q-m>	   end</q-m>
<a name="51"><q-n>     51  </q-n></a><q-m>  else if(count&gt;=3) trans.randomize() with {trans.fnx_e==2;trans.rd_addr==que[count-3];};</q-m>
<a name="52"><q-n>     52  </q-n></a><q-m>  */</q-m>
<a name="53"><q-n>     53  </q-n></a><q-m>//-------------------------------------------------------------------------------------------</q-m>
<a name="54"><q-n>     54  </q-n></a>            <q-m>//accesing reset task fail call back fail</q-m>
<a name="55"><q-n>     55  </q-n></a>	   <q-m>// in between reset;</q-m>
<a name="56"><q-n>     56  </q-n></a>	   <q-m>//if(count==2||count==5) begin</q-m>
<a name="57"><q-n>     57  </q-n></a>		   <q-m>//tr.reset(vif); //reset by callback we have to pass the argument because it is taking the vif od the test</q-m>
<a name="58"><q-n>     58  </q-n></a>	<q-m>//	   -&gt;reset_on;  //reset by event</q-m>
<a name="59"><q-n>     59  </q-n></a>	  <q-m>// end</q-m>
<a name="60"><q-n>     60  </q-n></a>	   <q-m>//count++;</q-m>
<a name="61"><q-n>     61  </q-n></a>	   <q-m>//put_wait();</q-m>
<a name="62"><q-n>     62  </q-n></a>	   <q-m>//$display("count is %d",count);</q-m>
<a name="63"><q-n>     63  </q-n></a>	   <q-m>//trans.flag=1;</q-m>
<a name="64"><q-n>     64  </q-n></a>	   <q-m>//$display("inside gen");</q-m>
<a name="65"><q-n>     65  </q-n></a>  <q-m>//#1;</q-m>
<a name="66"><q-n>     66  </q-n></a>  <q-m>//$display("perfect skeleton till generator %b",trans.wr_data);</q-m>
<a name="67"><q-n>     67  </q-n></a>   <q-m>//trans.dis("generator");</q-m>
<a name="68"><q-n>     68  </q-n></a><q-m>//  end</q-m>
<a name="69"><q-n>     69  </q-n></a> <q-w>endtask</q-w>
<a name="70"><q-n>     70  </q-n></a> 
<a name="71"><q-n>     71  </q-n></a>protected task put_wait();
<a name="72"><q-n>     72  </q-n></a>  gen2drv.put(trans);
<a name="73"><q-n>     73  </q-n></a>  @(item_done);
<a name="74"><q-n>     74  </q-n></a> endtask
<a name="75"><q-n>     75  </q-n></a>endclass
<a name="76"><q-n>     76  </q-n></a>`endif
<a name="77"><q-n>     77  </q-n></a>
</pre>
</tt>
<h1>Error: Source file not available...</h1>
  <p>
  This source file could not be found. Make sure the HDL sourcefiles are visible when you generate the HTML report.</p><p>
  Contact Mentor Customer Support if you have any questions.</p>
  
</body>
</html>
